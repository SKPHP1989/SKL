Grammar

    0 $accept: translation_unit $end

    1 translation_unit: function_definition
    2                 | can_top_statement
    3                 | translation_unit can_top_statement
    4                 | translation_unit cannot_top_statement
    5                 | translation_unit function_definition

    6 function_definition: T_FUNCTION T_IDENTIFIER T_LP param_list T_RP statement_block
    7                    | T_FUNCTION T_IDENTIFIER T_LP T_RP statement_block

    8 can_top_statement: expression_statement
    9                  | global_variable_declaration_statement
   10                  | for_statement
   11                  | if_statement
   12                  | return_statement
   13                  | include_statement

   14 cannot_top_statement: break_statement
   15                     | continue_statement

   16 all_statement: can_top_statement
   17              | cannot_top_statement

   18 include_statement: T_INCLUDE T_STRING_LITERAL T_SEMICOLON

   19 expression_statement: expression T_SEMICOLON

   20 for_statement: T_FOR T_LP option_expression T_SEMICOLON option_expression T_SEMICOLON option_expression T_RP statement_block

   21 break_statement: T_BREAK T_SEMICOLON

   22 if_statement: T_IF T_LP expression T_RP statement_block
   23             | T_IF T_LP expression T_RP statement_block T_ELSE statement_block

   24 return_statement: T_RETURN option_expression T_SEMICOLON

   25 global_variable_declaration_statement: T_GLOBAL T_IDENTIFIER T_SEMICOLON
   26                                      | T_GLOBAL T_IDENTIFIER T_ASSIGN expression T_SEMICOLON

   27 statement_list: all_statement
   28               | statement_list all_statement

   29 statement_block: T_LC T_RC
   30                | T_LC statement_list T_RC

   31 continue_statement: T_CONTINUE T_SEMICOLON

   32 expression: equality_expression
   33           | T_IDENTIFIER T_ASSIGN expression

   34 equality_expression: relational_expression
   35                    | equality_expression T_EQ relational_expression
   36                    | equality_expression T_NE relational_expression

   37 relational_expression: additive_expression
   38                      | relational_expression T_LT additive_expression
   39                      | relational_expression T_GT additive_expression
   40                      | relational_expression T_LE additive_expression
   41                      | relational_expression T_GE additive_expression

   42 additive_expression: multiplicative_expression
   43                    | additive_expression T_ADD multiplicative_expression
   44                    | additive_expression T_SUB multiplicative_expression

   45 multiplicative_expression: primary_expression
   46                          | multiplicative_expression T_DIV primary_expression
   47                          | multiplicative_expression T_MUL primary_expression

   48 primary_expression: T_SUB primary_expression
   49                   | T_LP expression T_RP
   50                   | T_IDENTIFIER
   51                   | T_STRING_LITERAL
   52                   | T_INT_LITERAL
   53                   | T_DOUBLE_LITERAL
   54                   | T_IDENTIFIER T_LP T_RP
   55                   | T_IDENTIFIER T_LP call_param_list T_RP

   56 option_expression: expression
   57                  | %empty

   58 param_list: T_IDENTIFIER
   59           | param_list T_COMMA T_IDENTIFIER

   60 call_param_list: expression
   61                | call_param_list T_COMMA expression


Terminals, with rules where they appear

$end (0) 0
error (256)
T_INT_LITERAL (258) 52
T_DOUBLE_LITERAL (259) 53
T_FUNCTION (260) 6 7
T_GLOBAL (261) 25 26
T_FOR (262) 20
T_IF (263) 22 23
T_ELSE (264) 23
T_ADD (265) 43
T_SUB (266) 44 48
T_MUL (267) 47
T_DIV (268) 46
T_ASSIGN (269) 26 33
T_EQ (270) 35
T_NE (271) 36
T_GT (272) 39
T_GE (273) 41
T_LT (274) 38
T_LE (275) 40
T_LP (276) 6 7 20 22 23 49 54 55
T_RP (277) 6 7 20 22 23 49 54 55
T_LC (278) 29 30
T_RC (279) 29 30
T_SEMICOLON (280) 18 19 20 21 24 25 26 31
T_IDENTIFIER (281) 6 7 25 26 33 50 54 55 58 59
T_BREAK (282) 21
T_CONTINUE (283) 31
T_RETURN (284) 24
T_COMMA (285) 59 61
T_STRING_LITERAL (286) 18 51
T_INCLUDE (287) 18


Nonterminals, with rules where they appear

$accept (33)
    on left: 0
translation_unit (34)
    on left: 1 2 3 4 5, on right: 0 3 4 5
function_definition (35)
    on left: 6 7, on right: 1 5
can_top_statement (36)
    on left: 8 9 10 11 12 13, on right: 2 3 16
cannot_top_statement (37)
    on left: 14 15, on right: 4 17
all_statement (38)
    on left: 16 17, on right: 27 28
include_statement (39)
    on left: 18, on right: 13
expression_statement (40)
    on left: 19, on right: 8
for_statement (41)
    on left: 20, on right: 10
break_statement (42)
    on left: 21, on right: 14
if_statement (43)
    on left: 22 23, on right: 11
return_statement (44)
    on left: 24, on right: 12
global_variable_declaration_statement (45)
    on left: 25 26, on right: 9
statement_list (46)
    on left: 27 28, on right: 28 30
statement_block (47)
    on left: 29 30, on right: 6 7 20 22 23
continue_statement (48)
    on left: 31, on right: 15
expression (49)
    on left: 32 33, on right: 19 22 23 26 33 49 56 60 61
equality_expression (50)
    on left: 34 35 36, on right: 32 35 36
relational_expression (51)
    on left: 37 38 39 40 41, on right: 34 35 36 38 39 40 41
additive_expression (52)
    on left: 42 43 44, on right: 37 38 39 40 41 43 44
multiplicative_expression (53)
    on left: 45 46 47, on right: 42 43 44 46 47
primary_expression (54)
    on left: 48 49 50 51 52 53 54 55, on right: 45 46 47 48
option_expression (55)
    on left: 56 57, on right: 20 24
param_list (56)
    on left: 58 59, on right: 6 59
call_param_list (57)
    on left: 60 61, on right: 55 61


State 0

    0 $accept: . translation_unit $end

    T_INT_LITERAL     shift, and go to state 1
    T_DOUBLE_LITERAL  shift, and go to state 2
    T_FUNCTION        shift, and go to state 3
    T_GLOBAL          shift, and go to state 4
    T_FOR             shift, and go to state 5
    T_IF              shift, and go to state 6
    T_SUB             shift, and go to state 7
    T_LP              shift, and go to state 8
    T_IDENTIFIER      shift, and go to state 9
    T_RETURN          shift, and go to state 10
    T_STRING_LITERAL  shift, and go to state 11
    T_INCLUDE         shift, and go to state 12

    translation_unit                       go to state 13
    function_definition                    go to state 14
    can_top_statement                      go to state 15
    include_statement                      go to state 16
    expression_statement                   go to state 17
    for_statement                          go to state 18
    if_statement                           go to state 19
    return_statement                       go to state 20
    global_variable_declaration_statement  go to state 21
    expression                             go to state 22
    equality_expression                    go to state 23
    relational_expression                  go to state 24
    additive_expression                    go to state 25
    multiplicative_expression              go to state 26
    primary_expression                     go to state 27


State 1

   52 primary_expression: T_INT_LITERAL .

    $default  reduce using rule 52 (primary_expression)


State 2

   53 primary_expression: T_DOUBLE_LITERAL .

    $default  reduce using rule 53 (primary_expression)


State 3

    6 function_definition: T_FUNCTION . T_IDENTIFIER T_LP param_list T_RP statement_block
    7                    | T_FUNCTION . T_IDENTIFIER T_LP T_RP statement_block

    T_IDENTIFIER  shift, and go to state 28


State 4

   25 global_variable_declaration_statement: T_GLOBAL . T_IDENTIFIER T_SEMICOLON
   26                                      | T_GLOBAL . T_IDENTIFIER T_ASSIGN expression T_SEMICOLON

    T_IDENTIFIER  shift, and go to state 29


State 5

   20 for_statement: T_FOR . T_LP option_expression T_SEMICOLON option_expression T_SEMICOLON option_expression T_RP statement_block

    T_LP  shift, and go to state 30


State 6

   22 if_statement: T_IF . T_LP expression T_RP statement_block
   23             | T_IF . T_LP expression T_RP statement_block T_ELSE statement_block

    T_LP  shift, and go to state 31


State 7

   48 primary_expression: T_SUB . primary_expression

    T_INT_LITERAL     shift, and go to state 1
    T_DOUBLE_LITERAL  shift, and go to state 2
    T_SUB             shift, and go to state 7
    T_LP              shift, and go to state 8
    T_IDENTIFIER      shift, and go to state 32
    T_STRING_LITERAL  shift, and go to state 11

    primary_expression  go to state 33


State 8

   49 primary_expression: T_LP . expression T_RP

    T_INT_LITERAL     shift, and go to state 1
    T_DOUBLE_LITERAL  shift, and go to state 2
    T_SUB             shift, and go to state 7
    T_LP              shift, and go to state 8
    T_IDENTIFIER      shift, and go to state 9
    T_STRING_LITERAL  shift, and go to state 11

    expression                 go to state 34
    equality_expression        go to state 23
    relational_expression      go to state 24
    additive_expression        go to state 25
    multiplicative_expression  go to state 26
    primary_expression         go to state 27


State 9

   33 expression: T_IDENTIFIER . T_ASSIGN expression
   50 primary_expression: T_IDENTIFIER .
   54                   | T_IDENTIFIER . T_LP T_RP
   55                   | T_IDENTIFIER . T_LP call_param_list T_RP

    T_ASSIGN  shift, and go to state 35
    T_LP      shift, and go to state 36

    $default  reduce using rule 50 (primary_expression)


State 10

   24 return_statement: T_RETURN . option_expression T_SEMICOLON

    T_INT_LITERAL     shift, and go to state 1
    T_DOUBLE_LITERAL  shift, and go to state 2
    T_SUB             shift, and go to state 7
    T_LP              shift, and go to state 8
    T_IDENTIFIER      shift, and go to state 9
    T_STRING_LITERAL  shift, and go to state 11

    $default  reduce using rule 57 (option_expression)

    expression                 go to state 37
    equality_expression        go to state 23
    relational_expression      go to state 24
    additive_expression        go to state 25
    multiplicative_expression  go to state 26
    primary_expression         go to state 27
    option_expression          go to state 38


State 11

   51 primary_expression: T_STRING_LITERAL .

    $default  reduce using rule 51 (primary_expression)


State 12

   18 include_statement: T_INCLUDE . T_STRING_LITERAL T_SEMICOLON

    T_STRING_LITERAL  shift, and go to state 39


State 13

    0 $accept: translation_unit . $end
    3 translation_unit: translation_unit . can_top_statement
    4                 | translation_unit . cannot_top_statement
    5                 | translation_unit . function_definition

    $end              shift, and go to state 40
    T_INT_LITERAL     shift, and go to state 1
    T_DOUBLE_LITERAL  shift, and go to state 2
    T_FUNCTION        shift, and go to state 3
    T_GLOBAL          shift, and go to state 4
    T_FOR             shift, and go to state 5
    T_IF              shift, and go to state 6
    T_SUB             shift, and go to state 7
    T_LP              shift, and go to state 8
    T_IDENTIFIER      shift, and go to state 9
    T_BREAK           shift, and go to state 41
    T_CONTINUE        shift, and go to state 42
    T_RETURN          shift, and go to state 10
    T_STRING_LITERAL  shift, and go to state 11
    T_INCLUDE         shift, and go to state 12

    function_definition                    go to state 43
    can_top_statement                      go to state 44
    cannot_top_statement                   go to state 45
    include_statement                      go to state 16
    expression_statement                   go to state 17
    for_statement                          go to state 18
    break_statement                        go to state 46
    if_statement                           go to state 19
    return_statement                       go to state 20
    global_variable_declaration_statement  go to state 21
    continue_statement                     go to state 47
    expression                             go to state 22
    equality_expression                    go to state 23
    relational_expression                  go to state 24
    additive_expression                    go to state 25
    multiplicative_expression              go to state 26
    primary_expression                     go to state 27


State 14

    1 translation_unit: function_definition .

    $default  reduce using rule 1 (translation_unit)


State 15

    2 translation_unit: can_top_statement .

    $default  reduce using rule 2 (translation_unit)


State 16

   13 can_top_statement: include_statement .

    $default  reduce using rule 13 (can_top_statement)


State 17

    8 can_top_statement: expression_statement .

    $default  reduce using rule 8 (can_top_statement)


State 18

   10 can_top_statement: for_statement .

    $default  reduce using rule 10 (can_top_statement)


State 19

   11 can_top_statement: if_statement .

    $default  reduce using rule 11 (can_top_statement)


State 20

   12 can_top_statement: return_statement .

    $default  reduce using rule 12 (can_top_statement)


State 21

    9 can_top_statement: global_variable_declaration_statement .

    $default  reduce using rule 9 (can_top_statement)


State 22

   19 expression_statement: expression . T_SEMICOLON

    T_SEMICOLON  shift, and go to state 48


State 23

   32 expression: equality_expression .
   35 equality_expression: equality_expression . T_EQ relational_expression
   36                    | equality_expression . T_NE relational_expression

    T_EQ  shift, and go to state 49
    T_NE  shift, and go to state 50

    $default  reduce using rule 32 (expression)


State 24

   34 equality_expression: relational_expression .
   38 relational_expression: relational_expression . T_LT additive_expression
   39                      | relational_expression . T_GT additive_expression
   40                      | relational_expression . T_LE additive_expression
   41                      | relational_expression . T_GE additive_expression

    T_GT  shift, and go to state 51
    T_GE  shift, and go to state 52
    T_LT  shift, and go to state 53
    T_LE  shift, and go to state 54

    $default  reduce using rule 34 (equality_expression)


State 25

   37 relational_expression: additive_expression .
   43 additive_expression: additive_expression . T_ADD multiplicative_expression
   44                    | additive_expression . T_SUB multiplicative_expression

    T_ADD  shift, and go to state 55
    T_SUB  shift, and go to state 56

    $default  reduce using rule 37 (relational_expression)


State 26

   42 additive_expression: multiplicative_expression .
   46 multiplicative_expression: multiplicative_expression . T_DIV primary_expression
   47                          | multiplicative_expression . T_MUL primary_expression

    T_MUL  shift, and go to state 57
    T_DIV  shift, and go to state 58

    $default  reduce using rule 42 (additive_expression)


State 27

   45 multiplicative_expression: primary_expression .

    $default  reduce using rule 45 (multiplicative_expression)


State 28

    6 function_definition: T_FUNCTION T_IDENTIFIER . T_LP param_list T_RP statement_block
    7                    | T_FUNCTION T_IDENTIFIER . T_LP T_RP statement_block

    T_LP  shift, and go to state 59


State 29

   25 global_variable_declaration_statement: T_GLOBAL T_IDENTIFIER . T_SEMICOLON
   26                                      | T_GLOBAL T_IDENTIFIER . T_ASSIGN expression T_SEMICOLON

    T_ASSIGN     shift, and go to state 60
    T_SEMICOLON  shift, and go to state 61


State 30

   20 for_statement: T_FOR T_LP . option_expression T_SEMICOLON option_expression T_SEMICOLON option_expression T_RP statement_block

    T_INT_LITERAL     shift, and go to state 1
    T_DOUBLE_LITERAL  shift, and go to state 2
    T_SUB             shift, and go to state 7
    T_LP              shift, and go to state 8
    T_IDENTIFIER      shift, and go to state 9
    T_STRING_LITERAL  shift, and go to state 11

    $default  reduce using rule 57 (option_expression)

    expression                 go to state 37
    equality_expression        go to state 23
    relational_expression      go to state 24
    additive_expression        go to state 25
    multiplicative_expression  go to state 26
    primary_expression         go to state 27
    option_expression          go to state 62


State 31

   22 if_statement: T_IF T_LP . expression T_RP statement_block
   23             | T_IF T_LP . expression T_RP statement_block T_ELSE statement_block

    T_INT_LITERAL     shift, and go to state 1
    T_DOUBLE_LITERAL  shift, and go to state 2
    T_SUB             shift, and go to state 7
    T_LP              shift, and go to state 8
    T_IDENTIFIER      shift, and go to state 9
    T_STRING_LITERAL  shift, and go to state 11

    expression                 go to state 63
    equality_expression        go to state 23
    relational_expression      go to state 24
    additive_expression        go to state 25
    multiplicative_expression  go to state 26
    primary_expression         go to state 27


State 32

   50 primary_expression: T_IDENTIFIER .
   54                   | T_IDENTIFIER . T_LP T_RP
   55                   | T_IDENTIFIER . T_LP call_param_list T_RP

    T_LP  shift, and go to state 36

    $default  reduce using rule 50 (primary_expression)


State 33

   48 primary_expression: T_SUB primary_expression .

    $default  reduce using rule 48 (primary_expression)


State 34

   49 primary_expression: T_LP expression . T_RP

    T_RP  shift, and go to state 64


State 35

   33 expression: T_IDENTIFIER T_ASSIGN . expression

    T_INT_LITERAL     shift, and go to state 1
    T_DOUBLE_LITERAL  shift, and go to state 2
    T_SUB             shift, and go to state 7
    T_LP              shift, and go to state 8
    T_IDENTIFIER      shift, and go to state 9
    T_STRING_LITERAL  shift, and go to state 11

    expression                 go to state 65
    equality_expression        go to state 23
    relational_expression      go to state 24
    additive_expression        go to state 25
    multiplicative_expression  go to state 26
    primary_expression         go to state 27


State 36

   54 primary_expression: T_IDENTIFIER T_LP . T_RP
   55                   | T_IDENTIFIER T_LP . call_param_list T_RP

    T_INT_LITERAL     shift, and go to state 1
    T_DOUBLE_LITERAL  shift, and go to state 2
    T_SUB             shift, and go to state 7
    T_LP              shift, and go to state 8
    T_RP              shift, and go to state 66
    T_IDENTIFIER      shift, and go to state 9
    T_STRING_LITERAL  shift, and go to state 11

    expression                 go to state 67
    equality_expression        go to state 23
    relational_expression      go to state 24
    additive_expression        go to state 25
    multiplicative_expression  go to state 26
    primary_expression         go to state 27
    call_param_list            go to state 68


State 37

   56 option_expression: expression .

    $default  reduce using rule 56 (option_expression)


State 38

   24 return_statement: T_RETURN option_expression . T_SEMICOLON

    T_SEMICOLON  shift, and go to state 69


State 39

   18 include_statement: T_INCLUDE T_STRING_LITERAL . T_SEMICOLON

    T_SEMICOLON  shift, and go to state 70


State 40

    0 $accept: translation_unit $end .

    $default  accept


State 41

   21 break_statement: T_BREAK . T_SEMICOLON

    T_SEMICOLON  shift, and go to state 71


State 42

   31 continue_statement: T_CONTINUE . T_SEMICOLON

    T_SEMICOLON  shift, and go to state 72


State 43

    5 translation_unit: translation_unit function_definition .

    $default  reduce using rule 5 (translation_unit)


State 44

    3 translation_unit: translation_unit can_top_statement .

    $default  reduce using rule 3 (translation_unit)


State 45

    4 translation_unit: translation_unit cannot_top_statement .

    $default  reduce using rule 4 (translation_unit)


State 46

   14 cannot_top_statement: break_statement .

    $default  reduce using rule 14 (cannot_top_statement)


State 47

   15 cannot_top_statement: continue_statement .

    $default  reduce using rule 15 (cannot_top_statement)


State 48

   19 expression_statement: expression T_SEMICOLON .

    $default  reduce using rule 19 (expression_statement)


State 49

   35 equality_expression: equality_expression T_EQ . relational_expression

    T_INT_LITERAL     shift, and go to state 1
    T_DOUBLE_LITERAL  shift, and go to state 2
    T_SUB             shift, and go to state 7
    T_LP              shift, and go to state 8
    T_IDENTIFIER      shift, and go to state 32
    T_STRING_LITERAL  shift, and go to state 11

    relational_expression      go to state 73
    additive_expression        go to state 25
    multiplicative_expression  go to state 26
    primary_expression         go to state 27


State 50

   36 equality_expression: equality_expression T_NE . relational_expression

    T_INT_LITERAL     shift, and go to state 1
    T_DOUBLE_LITERAL  shift, and go to state 2
    T_SUB             shift, and go to state 7
    T_LP              shift, and go to state 8
    T_IDENTIFIER      shift, and go to state 32
    T_STRING_LITERAL  shift, and go to state 11

    relational_expression      go to state 74
    additive_expression        go to state 25
    multiplicative_expression  go to state 26
    primary_expression         go to state 27


State 51

   39 relational_expression: relational_expression T_GT . additive_expression

    T_INT_LITERAL     shift, and go to state 1
    T_DOUBLE_LITERAL  shift, and go to state 2
    T_SUB             shift, and go to state 7
    T_LP              shift, and go to state 8
    T_IDENTIFIER      shift, and go to state 32
    T_STRING_LITERAL  shift, and go to state 11

    additive_expression        go to state 75
    multiplicative_expression  go to state 26
    primary_expression         go to state 27


State 52

   41 relational_expression: relational_expression T_GE . additive_expression

    T_INT_LITERAL     shift, and go to state 1
    T_DOUBLE_LITERAL  shift, and go to state 2
    T_SUB             shift, and go to state 7
    T_LP              shift, and go to state 8
    T_IDENTIFIER      shift, and go to state 32
    T_STRING_LITERAL  shift, and go to state 11

    additive_expression        go to state 76
    multiplicative_expression  go to state 26
    primary_expression         go to state 27


State 53

   38 relational_expression: relational_expression T_LT . additive_expression

    T_INT_LITERAL     shift, and go to state 1
    T_DOUBLE_LITERAL  shift, and go to state 2
    T_SUB             shift, and go to state 7
    T_LP              shift, and go to state 8
    T_IDENTIFIER      shift, and go to state 32
    T_STRING_LITERAL  shift, and go to state 11

    additive_expression        go to state 77
    multiplicative_expression  go to state 26
    primary_expression         go to state 27


State 54

   40 relational_expression: relational_expression T_LE . additive_expression

    T_INT_LITERAL     shift, and go to state 1
    T_DOUBLE_LITERAL  shift, and go to state 2
    T_SUB             shift, and go to state 7
    T_LP              shift, and go to state 8
    T_IDENTIFIER      shift, and go to state 32
    T_STRING_LITERAL  shift, and go to state 11

    additive_expression        go to state 78
    multiplicative_expression  go to state 26
    primary_expression         go to state 27


State 55

   43 additive_expression: additive_expression T_ADD . multiplicative_expression

    T_INT_LITERAL     shift, and go to state 1
    T_DOUBLE_LITERAL  shift, and go to state 2
    T_SUB             shift, and go to state 7
    T_LP              shift, and go to state 8
    T_IDENTIFIER      shift, and go to state 32
    T_STRING_LITERAL  shift, and go to state 11

    multiplicative_expression  go to state 79
    primary_expression         go to state 27


State 56

   44 additive_expression: additive_expression T_SUB . multiplicative_expression

    T_INT_LITERAL     shift, and go to state 1
    T_DOUBLE_LITERAL  shift, and go to state 2
    T_SUB             shift, and go to state 7
    T_LP              shift, and go to state 8
    T_IDENTIFIER      shift, and go to state 32
    T_STRING_LITERAL  shift, and go to state 11

    multiplicative_expression  go to state 80
    primary_expression         go to state 27


State 57

   47 multiplicative_expression: multiplicative_expression T_MUL . primary_expression

    T_INT_LITERAL     shift, and go to state 1
    T_DOUBLE_LITERAL  shift, and go to state 2
    T_SUB             shift, and go to state 7
    T_LP              shift, and go to state 8
    T_IDENTIFIER      shift, and go to state 32
    T_STRING_LITERAL  shift, and go to state 11

    primary_expression  go to state 81


State 58

   46 multiplicative_expression: multiplicative_expression T_DIV . primary_expression

    T_INT_LITERAL     shift, and go to state 1
    T_DOUBLE_LITERAL  shift, and go to state 2
    T_SUB             shift, and go to state 7
    T_LP              shift, and go to state 8
    T_IDENTIFIER      shift, and go to state 32
    T_STRING_LITERAL  shift, and go to state 11

    primary_expression  go to state 82


State 59

    6 function_definition: T_FUNCTION T_IDENTIFIER T_LP . param_list T_RP statement_block
    7                    | T_FUNCTION T_IDENTIFIER T_LP . T_RP statement_block

    T_RP          shift, and go to state 83
    T_IDENTIFIER  shift, and go to state 84

    param_list  go to state 85


State 60

   26 global_variable_declaration_statement: T_GLOBAL T_IDENTIFIER T_ASSIGN . expression T_SEMICOLON

    T_INT_LITERAL     shift, and go to state 1
    T_DOUBLE_LITERAL  shift, and go to state 2
    T_SUB             shift, and go to state 7
    T_LP              shift, and go to state 8
    T_IDENTIFIER      shift, and go to state 9
    T_STRING_LITERAL  shift, and go to state 11

    expression                 go to state 86
    equality_expression        go to state 23
    relational_expression      go to state 24
    additive_expression        go to state 25
    multiplicative_expression  go to state 26
    primary_expression         go to state 27


State 61

   25 global_variable_declaration_statement: T_GLOBAL T_IDENTIFIER T_SEMICOLON .

    $default  reduce using rule 25 (global_variable_declaration_statement)


State 62

   20 for_statement: T_FOR T_LP option_expression . T_SEMICOLON option_expression T_SEMICOLON option_expression T_RP statement_block

    T_SEMICOLON  shift, and go to state 87


State 63

   22 if_statement: T_IF T_LP expression . T_RP statement_block
   23             | T_IF T_LP expression . T_RP statement_block T_ELSE statement_block

    T_RP  shift, and go to state 88


State 64

   49 primary_expression: T_LP expression T_RP .

    $default  reduce using rule 49 (primary_expression)


State 65

   33 expression: T_IDENTIFIER T_ASSIGN expression .

    $default  reduce using rule 33 (expression)


State 66

   54 primary_expression: T_IDENTIFIER T_LP T_RP .

    $default  reduce using rule 54 (primary_expression)


State 67

   60 call_param_list: expression .

    $default  reduce using rule 60 (call_param_list)


State 68

   55 primary_expression: T_IDENTIFIER T_LP call_param_list . T_RP
   61 call_param_list: call_param_list . T_COMMA expression

    T_RP     shift, and go to state 89
    T_COMMA  shift, and go to state 90


State 69

   24 return_statement: T_RETURN option_expression T_SEMICOLON .

    $default  reduce using rule 24 (return_statement)


State 70

   18 include_statement: T_INCLUDE T_STRING_LITERAL T_SEMICOLON .

    $default  reduce using rule 18 (include_statement)


State 71

   21 break_statement: T_BREAK T_SEMICOLON .

    $default  reduce using rule 21 (break_statement)


State 72

   31 continue_statement: T_CONTINUE T_SEMICOLON .

    $default  reduce using rule 31 (continue_statement)


State 73

   35 equality_expression: equality_expression T_EQ relational_expression .
   38 relational_expression: relational_expression . T_LT additive_expression
   39                      | relational_expression . T_GT additive_expression
   40                      | relational_expression . T_LE additive_expression
   41                      | relational_expression . T_GE additive_expression

    T_GT  shift, and go to state 51
    T_GE  shift, and go to state 52
    T_LT  shift, and go to state 53
    T_LE  shift, and go to state 54

    $default  reduce using rule 35 (equality_expression)


State 74

   36 equality_expression: equality_expression T_NE relational_expression .
   38 relational_expression: relational_expression . T_LT additive_expression
   39                      | relational_expression . T_GT additive_expression
   40                      | relational_expression . T_LE additive_expression
   41                      | relational_expression . T_GE additive_expression

    T_GT  shift, and go to state 51
    T_GE  shift, and go to state 52
    T_LT  shift, and go to state 53
    T_LE  shift, and go to state 54

    $default  reduce using rule 36 (equality_expression)


State 75

   39 relational_expression: relational_expression T_GT additive_expression .
   43 additive_expression: additive_expression . T_ADD multiplicative_expression
   44                    | additive_expression . T_SUB multiplicative_expression

    T_ADD  shift, and go to state 55
    T_SUB  shift, and go to state 56

    $default  reduce using rule 39 (relational_expression)


State 76

   41 relational_expression: relational_expression T_GE additive_expression .
   43 additive_expression: additive_expression . T_ADD multiplicative_expression
   44                    | additive_expression . T_SUB multiplicative_expression

    T_ADD  shift, and go to state 55
    T_SUB  shift, and go to state 56

    $default  reduce using rule 41 (relational_expression)


State 77

   38 relational_expression: relational_expression T_LT additive_expression .
   43 additive_expression: additive_expression . T_ADD multiplicative_expression
   44                    | additive_expression . T_SUB multiplicative_expression

    T_ADD  shift, and go to state 55
    T_SUB  shift, and go to state 56

    $default  reduce using rule 38 (relational_expression)


State 78

   40 relational_expression: relational_expression T_LE additive_expression .
   43 additive_expression: additive_expression . T_ADD multiplicative_expression
   44                    | additive_expression . T_SUB multiplicative_expression

    T_ADD  shift, and go to state 55
    T_SUB  shift, and go to state 56

    $default  reduce using rule 40 (relational_expression)


State 79

   43 additive_expression: additive_expression T_ADD multiplicative_expression .
   46 multiplicative_expression: multiplicative_expression . T_DIV primary_expression
   47                          | multiplicative_expression . T_MUL primary_expression

    T_MUL  shift, and go to state 57
    T_DIV  shift, and go to state 58

    $default  reduce using rule 43 (additive_expression)


State 80

   44 additive_expression: additive_expression T_SUB multiplicative_expression .
   46 multiplicative_expression: multiplicative_expression . T_DIV primary_expression
   47                          | multiplicative_expression . T_MUL primary_expression

    T_MUL  shift, and go to state 57
    T_DIV  shift, and go to state 58

    $default  reduce using rule 44 (additive_expression)


State 81

   47 multiplicative_expression: multiplicative_expression T_MUL primary_expression .

    $default  reduce using rule 47 (multiplicative_expression)


State 82

   46 multiplicative_expression: multiplicative_expression T_DIV primary_expression .

    $default  reduce using rule 46 (multiplicative_expression)


State 83

    7 function_definition: T_FUNCTION T_IDENTIFIER T_LP T_RP . statement_block

    T_LC  shift, and go to state 91

    statement_block  go to state 92


State 84

   58 param_list: T_IDENTIFIER .

    $default  reduce using rule 58 (param_list)


State 85

    6 function_definition: T_FUNCTION T_IDENTIFIER T_LP param_list . T_RP statement_block
   59 param_list: param_list . T_COMMA T_IDENTIFIER

    T_RP     shift, and go to state 93
    T_COMMA  shift, and go to state 94


State 86

   26 global_variable_declaration_statement: T_GLOBAL T_IDENTIFIER T_ASSIGN expression . T_SEMICOLON

    T_SEMICOLON  shift, and go to state 95


State 87

   20 for_statement: T_FOR T_LP option_expression T_SEMICOLON . option_expression T_SEMICOLON option_expression T_RP statement_block

    T_INT_LITERAL     shift, and go to state 1
    T_DOUBLE_LITERAL  shift, and go to state 2
    T_SUB             shift, and go to state 7
    T_LP              shift, and go to state 8
    T_IDENTIFIER      shift, and go to state 9
    T_STRING_LITERAL  shift, and go to state 11

    $default  reduce using rule 57 (option_expression)

    expression                 go to state 37
    equality_expression        go to state 23
    relational_expression      go to state 24
    additive_expression        go to state 25
    multiplicative_expression  go to state 26
    primary_expression         go to state 27
    option_expression          go to state 96


State 88

   22 if_statement: T_IF T_LP expression T_RP . statement_block
   23             | T_IF T_LP expression T_RP . statement_block T_ELSE statement_block

    T_LC  shift, and go to state 91

    statement_block  go to state 97


State 89

   55 primary_expression: T_IDENTIFIER T_LP call_param_list T_RP .

    $default  reduce using rule 55 (primary_expression)


State 90

   61 call_param_list: call_param_list T_COMMA . expression

    T_INT_LITERAL     shift, and go to state 1
    T_DOUBLE_LITERAL  shift, and go to state 2
    T_SUB             shift, and go to state 7
    T_LP              shift, and go to state 8
    T_IDENTIFIER      shift, and go to state 9
    T_STRING_LITERAL  shift, and go to state 11

    expression                 go to state 98
    equality_expression        go to state 23
    relational_expression      go to state 24
    additive_expression        go to state 25
    multiplicative_expression  go to state 26
    primary_expression         go to state 27


State 91

   29 statement_block: T_LC . T_RC
   30                | T_LC . statement_list T_RC

    T_INT_LITERAL     shift, and go to state 1
    T_DOUBLE_LITERAL  shift, and go to state 2
    T_GLOBAL          shift, and go to state 4
    T_FOR             shift, and go to state 5
    T_IF              shift, and go to state 6
    T_SUB             shift, and go to state 7
    T_LP              shift, and go to state 8
    T_RC              shift, and go to state 99
    T_IDENTIFIER      shift, and go to state 9
    T_BREAK           shift, and go to state 41
    T_CONTINUE        shift, and go to state 42
    T_RETURN          shift, and go to state 10
    T_STRING_LITERAL  shift, and go to state 11
    T_INCLUDE         shift, and go to state 12

    can_top_statement                      go to state 100
    cannot_top_statement                   go to state 101
    all_statement                          go to state 102
    include_statement                      go to state 16
    expression_statement                   go to state 17
    for_statement                          go to state 18
    break_statement                        go to state 46
    if_statement                           go to state 19
    return_statement                       go to state 20
    global_variable_declaration_statement  go to state 21
    statement_list                         go to state 103
    continue_statement                     go to state 47
    expression                             go to state 22
    equality_expression                    go to state 23
    relational_expression                  go to state 24
    additive_expression                    go to state 25
    multiplicative_expression              go to state 26
    primary_expression                     go to state 27


State 92

    7 function_definition: T_FUNCTION T_IDENTIFIER T_LP T_RP statement_block .

    $default  reduce using rule 7 (function_definition)


State 93

    6 function_definition: T_FUNCTION T_IDENTIFIER T_LP param_list T_RP . statement_block

    T_LC  shift, and go to state 91

    statement_block  go to state 104


State 94

   59 param_list: param_list T_COMMA . T_IDENTIFIER

    T_IDENTIFIER  shift, and go to state 105


State 95

   26 global_variable_declaration_statement: T_GLOBAL T_IDENTIFIER T_ASSIGN expression T_SEMICOLON .

    $default  reduce using rule 26 (global_variable_declaration_statement)


State 96

   20 for_statement: T_FOR T_LP option_expression T_SEMICOLON option_expression . T_SEMICOLON option_expression T_RP statement_block

    T_SEMICOLON  shift, and go to state 106


State 97

   22 if_statement: T_IF T_LP expression T_RP statement_block .
   23             | T_IF T_LP expression T_RP statement_block . T_ELSE statement_block

    T_ELSE  shift, and go to state 107

    $default  reduce using rule 22 (if_statement)


State 98

   61 call_param_list: call_param_list T_COMMA expression .

    $default  reduce using rule 61 (call_param_list)


State 99

   29 statement_block: T_LC T_RC .

    $default  reduce using rule 29 (statement_block)


State 100

   16 all_statement: can_top_statement .

    $default  reduce using rule 16 (all_statement)


State 101

   17 all_statement: cannot_top_statement .

    $default  reduce using rule 17 (all_statement)


State 102

   27 statement_list: all_statement .

    $default  reduce using rule 27 (statement_list)


State 103

   28 statement_list: statement_list . all_statement
   30 statement_block: T_LC statement_list . T_RC

    T_INT_LITERAL     shift, and go to state 1
    T_DOUBLE_LITERAL  shift, and go to state 2
    T_GLOBAL          shift, and go to state 4
    T_FOR             shift, and go to state 5
    T_IF              shift, and go to state 6
    T_SUB             shift, and go to state 7
    T_LP              shift, and go to state 8
    T_RC              shift, and go to state 108
    T_IDENTIFIER      shift, and go to state 9
    T_BREAK           shift, and go to state 41
    T_CONTINUE        shift, and go to state 42
    T_RETURN          shift, and go to state 10
    T_STRING_LITERAL  shift, and go to state 11
    T_INCLUDE         shift, and go to state 12

    can_top_statement                      go to state 100
    cannot_top_statement                   go to state 101
    all_statement                          go to state 109
    include_statement                      go to state 16
    expression_statement                   go to state 17
    for_statement                          go to state 18
    break_statement                        go to state 46
    if_statement                           go to state 19
    return_statement                       go to state 20
    global_variable_declaration_statement  go to state 21
    continue_statement                     go to state 47
    expression                             go to state 22
    equality_expression                    go to state 23
    relational_expression                  go to state 24
    additive_expression                    go to state 25
    multiplicative_expression              go to state 26
    primary_expression                     go to state 27


State 104

    6 function_definition: T_FUNCTION T_IDENTIFIER T_LP param_list T_RP statement_block .

    $default  reduce using rule 6 (function_definition)


State 105

   59 param_list: param_list T_COMMA T_IDENTIFIER .

    $default  reduce using rule 59 (param_list)


State 106

   20 for_statement: T_FOR T_LP option_expression T_SEMICOLON option_expression T_SEMICOLON . option_expression T_RP statement_block

    T_INT_LITERAL     shift, and go to state 1
    T_DOUBLE_LITERAL  shift, and go to state 2
    T_SUB             shift, and go to state 7
    T_LP              shift, and go to state 8
    T_IDENTIFIER      shift, and go to state 9
    T_STRING_LITERAL  shift, and go to state 11

    $default  reduce using rule 57 (option_expression)

    expression                 go to state 37
    equality_expression        go to state 23
    relational_expression      go to state 24
    additive_expression        go to state 25
    multiplicative_expression  go to state 26
    primary_expression         go to state 27
    option_expression          go to state 110


State 107

   23 if_statement: T_IF T_LP expression T_RP statement_block T_ELSE . statement_block

    T_LC  shift, and go to state 91

    statement_block  go to state 111


State 108

   30 statement_block: T_LC statement_list T_RC .

    $default  reduce using rule 30 (statement_block)


State 109

   28 statement_list: statement_list all_statement .

    $default  reduce using rule 28 (statement_list)


State 110

   20 for_statement: T_FOR T_LP option_expression T_SEMICOLON option_expression T_SEMICOLON option_expression . T_RP statement_block

    T_RP  shift, and go to state 112


State 111

   23 if_statement: T_IF T_LP expression T_RP statement_block T_ELSE statement_block .

    $default  reduce using rule 23 (if_statement)


State 112

   20 for_statement: T_FOR T_LP option_expression T_SEMICOLON option_expression T_SEMICOLON option_expression T_RP . statement_block

    T_LC  shift, and go to state 91

    statement_block  go to state 113


State 113

   20 for_statement: T_FOR T_LP option_expression T_SEMICOLON option_expression T_SEMICOLON option_expression T_RP statement_block .

    $default  reduce using rule 20 (for_statement)
