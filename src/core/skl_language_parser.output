Grammar

    0 $accept: translation_unit $end

    1 translation_unit: function_definition
    2                 | can_top_statement
    3                 | translation_unit can_top_statement
    4                 | translation_unit cannot_top_statement
    5                 | translation_unit function_definition

    6 function_definition: T_FUNCTION T_IDENTIFIER T_LP param_list T_RP statement_block
    7                    | T_FUNCTION T_IDENTIFIER T_LP T_RP statement_block

    8 can_top_statement: expression_statement
    9                  | global_variable_declaration_statement
   10                  | for_statement
   11                  | if_statement
   12                  | return_statement
   13                  | include_statement
   14                  | do_while_statement
   15                  | while_statement

   16 cannot_top_statement: break_statement
   17                     | continue_statement

   18 all_statement: can_top_statement
   19              | cannot_top_statement

   20 include_statement: T_INCLUDE T_STRING_LITERAL T_SEMICOLON

   21 expression_statement: expression T_SEMICOLON

   22 for_statement: T_FOR T_LP option_expression T_SEMICOLON option_expression T_SEMICOLON option_expression T_RP statement_block

   23 do_while_statement: T_DO statement_block T_WHILE T_LP expression T_RP T_SEMICOLON

   24 while_statement: T_WHILE T_LP expression T_RP statement_block

   25 break_statement: T_BREAK T_SEMICOLON

   26 if_statement: T_IF T_LP expression T_RP statement_block
   27             | T_IF T_LP expression T_RP statement_block T_ELSE statement_block

   28 return_statement: T_RETURN option_expression T_SEMICOLON

   29 global_variable_declaration_statement: T_GLOBAL T_IDENTIFIER T_SEMICOLON
   30                                      | T_GLOBAL T_IDENTIFIER T_ASSIGN expression T_SEMICOLON

   31 statement_list: all_statement
   32               | statement_list all_statement

   33 statement_block: T_LC T_RC
   34                | T_LC statement_list T_RC

   35 continue_statement: T_CONTINUE T_SEMICOLON

   36 expression: equality_expression
   37           | T_IDENTIFIER T_ASSIGN expression

   38 equality_expression: relational_expression
   39                    | equality_expression T_EQ relational_expression
   40                    | equality_expression T_NE relational_expression

   41 relational_expression: additive_expression
   42                      | relational_expression T_LT additive_expression
   43                      | relational_expression T_GT additive_expression
   44                      | relational_expression T_LE additive_expression
   45                      | relational_expression T_GE additive_expression

   46 additive_expression: multiplicative_expression
   47                    | additive_expression T_ADD multiplicative_expression
   48                    | additive_expression T_SUB multiplicative_expression

   49 multiplicative_expression: primary_expression
   50                          | multiplicative_expression T_DIV primary_expression
   51                          | multiplicative_expression T_MUL primary_expression

   52 primary_expression: T_SUB primary_expression
   53                   | T_LP expression T_RP
   54                   | T_IDENTIFIER
   55                   | T_STRING_LITERAL
   56                   | T_INT_LITERAL
   57                   | T_DOUBLE_LITERAL
   58                   | T_IDENTIFIER T_LP T_RP
   59                   | T_IDENTIFIER T_LP call_param_list T_RP

   60 option_expression: expression
   61                  | %empty

   62 param_list: T_IDENTIFIER
   63           | param_list T_COMMA T_IDENTIFIER

   64 call_param_list: expression
   65                | call_param_list T_COMMA expression


Terminals, with rules where they appear

$end (0) 0
error (256)
T_INT_LITERAL (258) 56
T_DOUBLE_LITERAL (259) 57
T_FUNCTION (260) 6 7
T_GLOBAL (261) 29 30
T_FOR (262) 22
T_IF (263) 26 27
T_ELSE (264) 27
T_ADD (265) 47
T_SUB (266) 48 52
T_MUL (267) 51
T_DIV (268) 50
T_ASSIGN (269) 30 37
T_EQ (270) 39
T_NE (271) 40
T_GT (272) 43
T_GE (273) 45
T_LT (274) 42
T_LE (275) 44
T_LP (276) 6 7 22 23 24 26 27 53 58 59
T_RP (277) 6 7 22 23 24 26 27 53 58 59
T_LC (278) 33 34
T_RC (279) 33 34
T_SEMICOLON (280) 20 21 22 23 25 28 29 30 35
T_IDENTIFIER (281) 6 7 29 30 37 54 58 59 62 63
T_BREAK (282) 25
T_CONTINUE (283) 35
T_RETURN (284) 28
T_COMMA (285) 63 65
T_STRING_LITERAL (286) 20 55
T_INCLUDE (287) 20
T_DO (288) 23
T_WHILE (289) 23 24


Nonterminals, with rules where they appear

$accept (35)
    on left: 0
translation_unit (36)
    on left: 1 2 3 4 5, on right: 0 3 4 5
function_definition (37)
    on left: 6 7, on right: 1 5
can_top_statement (38)
    on left: 8 9 10 11 12 13 14 15, on right: 2 3 18
cannot_top_statement (39)
    on left: 16 17, on right: 4 19
all_statement (40)
    on left: 18 19, on right: 31 32
include_statement (41)
    on left: 20, on right: 13
expression_statement (42)
    on left: 21, on right: 8
for_statement (43)
    on left: 22, on right: 10
do_while_statement (44)
    on left: 23, on right: 14
while_statement (45)
    on left: 24, on right: 15
break_statement (46)
    on left: 25, on right: 16
if_statement (47)
    on left: 26 27, on right: 11
return_statement (48)
    on left: 28, on right: 12
global_variable_declaration_statement (49)
    on left: 29 30, on right: 9
statement_list (50)
    on left: 31 32, on right: 32 34
statement_block (51)
    on left: 33 34, on right: 6 7 22 23 24 26 27
continue_statement (52)
    on left: 35, on right: 17
expression (53)
    on left: 36 37, on right: 21 23 24 26 27 30 37 53 60 64 65
equality_expression (54)
    on left: 38 39 40, on right: 36 39 40
relational_expression (55)
    on left: 41 42 43 44 45, on right: 38 39 40 42 43 44 45
additive_expression (56)
    on left: 46 47 48, on right: 41 42 43 44 45 47 48
multiplicative_expression (57)
    on left: 49 50 51, on right: 46 47 48 50 51
primary_expression (58)
    on left: 52 53 54 55 56 57 58 59, on right: 49 50 51 52
option_expression (59)
    on left: 60 61, on right: 22 28
param_list (60)
    on left: 62 63, on right: 6 63
call_param_list (61)
    on left: 64 65, on right: 59 65


State 0

    0 $accept: . translation_unit $end

    T_INT_LITERAL     shift, and go to state 1
    T_DOUBLE_LITERAL  shift, and go to state 2
    T_FUNCTION        shift, and go to state 3
    T_GLOBAL          shift, and go to state 4
    T_FOR             shift, and go to state 5
    T_IF              shift, and go to state 6
    T_SUB             shift, and go to state 7
    T_LP              shift, and go to state 8
    T_IDENTIFIER      shift, and go to state 9
    T_RETURN          shift, and go to state 10
    T_STRING_LITERAL  shift, and go to state 11
    T_INCLUDE         shift, and go to state 12
    T_DO              shift, and go to state 13
    T_WHILE           shift, and go to state 14

    translation_unit                       go to state 15
    function_definition                    go to state 16
    can_top_statement                      go to state 17
    include_statement                      go to state 18
    expression_statement                   go to state 19
    for_statement                          go to state 20
    do_while_statement                     go to state 21
    while_statement                        go to state 22
    if_statement                           go to state 23
    return_statement                       go to state 24
    global_variable_declaration_statement  go to state 25
    expression                             go to state 26
    equality_expression                    go to state 27
    relational_expression                  go to state 28
    additive_expression                    go to state 29
    multiplicative_expression              go to state 30
    primary_expression                     go to state 31


State 1

   56 primary_expression: T_INT_LITERAL .

    $default  reduce using rule 56 (primary_expression)


State 2

   57 primary_expression: T_DOUBLE_LITERAL .

    $default  reduce using rule 57 (primary_expression)


State 3

    6 function_definition: T_FUNCTION . T_IDENTIFIER T_LP param_list T_RP statement_block
    7                    | T_FUNCTION . T_IDENTIFIER T_LP T_RP statement_block

    T_IDENTIFIER  shift, and go to state 32


State 4

   29 global_variable_declaration_statement: T_GLOBAL . T_IDENTIFIER T_SEMICOLON
   30                                      | T_GLOBAL . T_IDENTIFIER T_ASSIGN expression T_SEMICOLON

    T_IDENTIFIER  shift, and go to state 33


State 5

   22 for_statement: T_FOR . T_LP option_expression T_SEMICOLON option_expression T_SEMICOLON option_expression T_RP statement_block

    T_LP  shift, and go to state 34


State 6

   26 if_statement: T_IF . T_LP expression T_RP statement_block
   27             | T_IF . T_LP expression T_RP statement_block T_ELSE statement_block

    T_LP  shift, and go to state 35


State 7

   52 primary_expression: T_SUB . primary_expression

    T_INT_LITERAL     shift, and go to state 1
    T_DOUBLE_LITERAL  shift, and go to state 2
    T_SUB             shift, and go to state 7
    T_LP              shift, and go to state 8
    T_IDENTIFIER      shift, and go to state 36
    T_STRING_LITERAL  shift, and go to state 11

    primary_expression  go to state 37


State 8

   53 primary_expression: T_LP . expression T_RP

    T_INT_LITERAL     shift, and go to state 1
    T_DOUBLE_LITERAL  shift, and go to state 2
    T_SUB             shift, and go to state 7
    T_LP              shift, and go to state 8
    T_IDENTIFIER      shift, and go to state 9
    T_STRING_LITERAL  shift, and go to state 11

    expression                 go to state 38
    equality_expression        go to state 27
    relational_expression      go to state 28
    additive_expression        go to state 29
    multiplicative_expression  go to state 30
    primary_expression         go to state 31


State 9

   37 expression: T_IDENTIFIER . T_ASSIGN expression
   54 primary_expression: T_IDENTIFIER .
   58                   | T_IDENTIFIER . T_LP T_RP
   59                   | T_IDENTIFIER . T_LP call_param_list T_RP

    T_ASSIGN  shift, and go to state 39
    T_LP      shift, and go to state 40

    $default  reduce using rule 54 (primary_expression)


State 10

   28 return_statement: T_RETURN . option_expression T_SEMICOLON

    T_INT_LITERAL     shift, and go to state 1
    T_DOUBLE_LITERAL  shift, and go to state 2
    T_SUB             shift, and go to state 7
    T_LP              shift, and go to state 8
    T_IDENTIFIER      shift, and go to state 9
    T_STRING_LITERAL  shift, and go to state 11

    $default  reduce using rule 61 (option_expression)

    expression                 go to state 41
    equality_expression        go to state 27
    relational_expression      go to state 28
    additive_expression        go to state 29
    multiplicative_expression  go to state 30
    primary_expression         go to state 31
    option_expression          go to state 42


State 11

   55 primary_expression: T_STRING_LITERAL .

    $default  reduce using rule 55 (primary_expression)


State 12

   20 include_statement: T_INCLUDE . T_STRING_LITERAL T_SEMICOLON

    T_STRING_LITERAL  shift, and go to state 43


State 13

   23 do_while_statement: T_DO . statement_block T_WHILE T_LP expression T_RP T_SEMICOLON

    T_LC  shift, and go to state 44

    statement_block  go to state 45


State 14

   24 while_statement: T_WHILE . T_LP expression T_RP statement_block

    T_LP  shift, and go to state 46


State 15

    0 $accept: translation_unit . $end
    3 translation_unit: translation_unit . can_top_statement
    4                 | translation_unit . cannot_top_statement
    5                 | translation_unit . function_definition

    $end              shift, and go to state 47
    T_INT_LITERAL     shift, and go to state 1
    T_DOUBLE_LITERAL  shift, and go to state 2
    T_FUNCTION        shift, and go to state 3
    T_GLOBAL          shift, and go to state 4
    T_FOR             shift, and go to state 5
    T_IF              shift, and go to state 6
    T_SUB             shift, and go to state 7
    T_LP              shift, and go to state 8
    T_IDENTIFIER      shift, and go to state 9
    T_BREAK           shift, and go to state 48
    T_CONTINUE        shift, and go to state 49
    T_RETURN          shift, and go to state 10
    T_STRING_LITERAL  shift, and go to state 11
    T_INCLUDE         shift, and go to state 12
    T_DO              shift, and go to state 13
    T_WHILE           shift, and go to state 14

    function_definition                    go to state 50
    can_top_statement                      go to state 51
    cannot_top_statement                   go to state 52
    include_statement                      go to state 18
    expression_statement                   go to state 19
    for_statement                          go to state 20
    do_while_statement                     go to state 21
    while_statement                        go to state 22
    break_statement                        go to state 53
    if_statement                           go to state 23
    return_statement                       go to state 24
    global_variable_declaration_statement  go to state 25
    continue_statement                     go to state 54
    expression                             go to state 26
    equality_expression                    go to state 27
    relational_expression                  go to state 28
    additive_expression                    go to state 29
    multiplicative_expression              go to state 30
    primary_expression                     go to state 31


State 16

    1 translation_unit: function_definition .

    $default  reduce using rule 1 (translation_unit)


State 17

    2 translation_unit: can_top_statement .

    $default  reduce using rule 2 (translation_unit)


State 18

   13 can_top_statement: include_statement .

    $default  reduce using rule 13 (can_top_statement)


State 19

    8 can_top_statement: expression_statement .

    $default  reduce using rule 8 (can_top_statement)


State 20

   10 can_top_statement: for_statement .

    $default  reduce using rule 10 (can_top_statement)


State 21

   14 can_top_statement: do_while_statement .

    $default  reduce using rule 14 (can_top_statement)


State 22

   15 can_top_statement: while_statement .

    $default  reduce using rule 15 (can_top_statement)


State 23

   11 can_top_statement: if_statement .

    $default  reduce using rule 11 (can_top_statement)


State 24

   12 can_top_statement: return_statement .

    $default  reduce using rule 12 (can_top_statement)


State 25

    9 can_top_statement: global_variable_declaration_statement .

    $default  reduce using rule 9 (can_top_statement)


State 26

   21 expression_statement: expression . T_SEMICOLON

    T_SEMICOLON  shift, and go to state 55


State 27

   36 expression: equality_expression .
   39 equality_expression: equality_expression . T_EQ relational_expression
   40                    | equality_expression . T_NE relational_expression

    T_EQ  shift, and go to state 56
    T_NE  shift, and go to state 57

    $default  reduce using rule 36 (expression)


State 28

   38 equality_expression: relational_expression .
   42 relational_expression: relational_expression . T_LT additive_expression
   43                      | relational_expression . T_GT additive_expression
   44                      | relational_expression . T_LE additive_expression
   45                      | relational_expression . T_GE additive_expression

    T_GT  shift, and go to state 58
    T_GE  shift, and go to state 59
    T_LT  shift, and go to state 60
    T_LE  shift, and go to state 61

    $default  reduce using rule 38 (equality_expression)


State 29

   41 relational_expression: additive_expression .
   47 additive_expression: additive_expression . T_ADD multiplicative_expression
   48                    | additive_expression . T_SUB multiplicative_expression

    T_ADD  shift, and go to state 62
    T_SUB  shift, and go to state 63

    $default  reduce using rule 41 (relational_expression)


State 30

   46 additive_expression: multiplicative_expression .
   50 multiplicative_expression: multiplicative_expression . T_DIV primary_expression
   51                          | multiplicative_expression . T_MUL primary_expression

    T_MUL  shift, and go to state 64
    T_DIV  shift, and go to state 65

    $default  reduce using rule 46 (additive_expression)


State 31

   49 multiplicative_expression: primary_expression .

    $default  reduce using rule 49 (multiplicative_expression)


State 32

    6 function_definition: T_FUNCTION T_IDENTIFIER . T_LP param_list T_RP statement_block
    7                    | T_FUNCTION T_IDENTIFIER . T_LP T_RP statement_block

    T_LP  shift, and go to state 66


State 33

   29 global_variable_declaration_statement: T_GLOBAL T_IDENTIFIER . T_SEMICOLON
   30                                      | T_GLOBAL T_IDENTIFIER . T_ASSIGN expression T_SEMICOLON

    T_ASSIGN     shift, and go to state 67
    T_SEMICOLON  shift, and go to state 68


State 34

   22 for_statement: T_FOR T_LP . option_expression T_SEMICOLON option_expression T_SEMICOLON option_expression T_RP statement_block

    T_INT_LITERAL     shift, and go to state 1
    T_DOUBLE_LITERAL  shift, and go to state 2
    T_SUB             shift, and go to state 7
    T_LP              shift, and go to state 8
    T_IDENTIFIER      shift, and go to state 9
    T_STRING_LITERAL  shift, and go to state 11

    $default  reduce using rule 61 (option_expression)

    expression                 go to state 41
    equality_expression        go to state 27
    relational_expression      go to state 28
    additive_expression        go to state 29
    multiplicative_expression  go to state 30
    primary_expression         go to state 31
    option_expression          go to state 69


State 35

   26 if_statement: T_IF T_LP . expression T_RP statement_block
   27             | T_IF T_LP . expression T_RP statement_block T_ELSE statement_block

    T_INT_LITERAL     shift, and go to state 1
    T_DOUBLE_LITERAL  shift, and go to state 2
    T_SUB             shift, and go to state 7
    T_LP              shift, and go to state 8
    T_IDENTIFIER      shift, and go to state 9
    T_STRING_LITERAL  shift, and go to state 11

    expression                 go to state 70
    equality_expression        go to state 27
    relational_expression      go to state 28
    additive_expression        go to state 29
    multiplicative_expression  go to state 30
    primary_expression         go to state 31


State 36

   54 primary_expression: T_IDENTIFIER .
   58                   | T_IDENTIFIER . T_LP T_RP
   59                   | T_IDENTIFIER . T_LP call_param_list T_RP

    T_LP  shift, and go to state 40

    $default  reduce using rule 54 (primary_expression)


State 37

   52 primary_expression: T_SUB primary_expression .

    $default  reduce using rule 52 (primary_expression)


State 38

   53 primary_expression: T_LP expression . T_RP

    T_RP  shift, and go to state 71


State 39

   37 expression: T_IDENTIFIER T_ASSIGN . expression

    T_INT_LITERAL     shift, and go to state 1
    T_DOUBLE_LITERAL  shift, and go to state 2
    T_SUB             shift, and go to state 7
    T_LP              shift, and go to state 8
    T_IDENTIFIER      shift, and go to state 9
    T_STRING_LITERAL  shift, and go to state 11

    expression                 go to state 72
    equality_expression        go to state 27
    relational_expression      go to state 28
    additive_expression        go to state 29
    multiplicative_expression  go to state 30
    primary_expression         go to state 31


State 40

   58 primary_expression: T_IDENTIFIER T_LP . T_RP
   59                   | T_IDENTIFIER T_LP . call_param_list T_RP

    T_INT_LITERAL     shift, and go to state 1
    T_DOUBLE_LITERAL  shift, and go to state 2
    T_SUB             shift, and go to state 7
    T_LP              shift, and go to state 8
    T_RP              shift, and go to state 73
    T_IDENTIFIER      shift, and go to state 9
    T_STRING_LITERAL  shift, and go to state 11

    expression                 go to state 74
    equality_expression        go to state 27
    relational_expression      go to state 28
    additive_expression        go to state 29
    multiplicative_expression  go to state 30
    primary_expression         go to state 31
    call_param_list            go to state 75


State 41

   60 option_expression: expression .

    $default  reduce using rule 60 (option_expression)


State 42

   28 return_statement: T_RETURN option_expression . T_SEMICOLON

    T_SEMICOLON  shift, and go to state 76


State 43

   20 include_statement: T_INCLUDE T_STRING_LITERAL . T_SEMICOLON

    T_SEMICOLON  shift, and go to state 77


State 44

   33 statement_block: T_LC . T_RC
   34                | T_LC . statement_list T_RC

    T_INT_LITERAL     shift, and go to state 1
    T_DOUBLE_LITERAL  shift, and go to state 2
    T_GLOBAL          shift, and go to state 4
    T_FOR             shift, and go to state 5
    T_IF              shift, and go to state 6
    T_SUB             shift, and go to state 7
    T_LP              shift, and go to state 8
    T_RC              shift, and go to state 78
    T_IDENTIFIER      shift, and go to state 9
    T_BREAK           shift, and go to state 48
    T_CONTINUE        shift, and go to state 49
    T_RETURN          shift, and go to state 10
    T_STRING_LITERAL  shift, and go to state 11
    T_INCLUDE         shift, and go to state 12
    T_DO              shift, and go to state 13
    T_WHILE           shift, and go to state 14

    can_top_statement                      go to state 79
    cannot_top_statement                   go to state 80
    all_statement                          go to state 81
    include_statement                      go to state 18
    expression_statement                   go to state 19
    for_statement                          go to state 20
    do_while_statement                     go to state 21
    while_statement                        go to state 22
    break_statement                        go to state 53
    if_statement                           go to state 23
    return_statement                       go to state 24
    global_variable_declaration_statement  go to state 25
    statement_list                         go to state 82
    continue_statement                     go to state 54
    expression                             go to state 26
    equality_expression                    go to state 27
    relational_expression                  go to state 28
    additive_expression                    go to state 29
    multiplicative_expression              go to state 30
    primary_expression                     go to state 31


State 45

   23 do_while_statement: T_DO statement_block . T_WHILE T_LP expression T_RP T_SEMICOLON

    T_WHILE  shift, and go to state 83


State 46

   24 while_statement: T_WHILE T_LP . expression T_RP statement_block

    T_INT_LITERAL     shift, and go to state 1
    T_DOUBLE_LITERAL  shift, and go to state 2
    T_SUB             shift, and go to state 7
    T_LP              shift, and go to state 8
    T_IDENTIFIER      shift, and go to state 9
    T_STRING_LITERAL  shift, and go to state 11

    expression                 go to state 84
    equality_expression        go to state 27
    relational_expression      go to state 28
    additive_expression        go to state 29
    multiplicative_expression  go to state 30
    primary_expression         go to state 31


State 47

    0 $accept: translation_unit $end .

    $default  accept


State 48

   25 break_statement: T_BREAK . T_SEMICOLON

    T_SEMICOLON  shift, and go to state 85


State 49

   35 continue_statement: T_CONTINUE . T_SEMICOLON

    T_SEMICOLON  shift, and go to state 86


State 50

    5 translation_unit: translation_unit function_definition .

    $default  reduce using rule 5 (translation_unit)


State 51

    3 translation_unit: translation_unit can_top_statement .

    $default  reduce using rule 3 (translation_unit)


State 52

    4 translation_unit: translation_unit cannot_top_statement .

    $default  reduce using rule 4 (translation_unit)


State 53

   16 cannot_top_statement: break_statement .

    $default  reduce using rule 16 (cannot_top_statement)


State 54

   17 cannot_top_statement: continue_statement .

    $default  reduce using rule 17 (cannot_top_statement)


State 55

   21 expression_statement: expression T_SEMICOLON .

    $default  reduce using rule 21 (expression_statement)


State 56

   39 equality_expression: equality_expression T_EQ . relational_expression

    T_INT_LITERAL     shift, and go to state 1
    T_DOUBLE_LITERAL  shift, and go to state 2
    T_SUB             shift, and go to state 7
    T_LP              shift, and go to state 8
    T_IDENTIFIER      shift, and go to state 36
    T_STRING_LITERAL  shift, and go to state 11

    relational_expression      go to state 87
    additive_expression        go to state 29
    multiplicative_expression  go to state 30
    primary_expression         go to state 31


State 57

   40 equality_expression: equality_expression T_NE . relational_expression

    T_INT_LITERAL     shift, and go to state 1
    T_DOUBLE_LITERAL  shift, and go to state 2
    T_SUB             shift, and go to state 7
    T_LP              shift, and go to state 8
    T_IDENTIFIER      shift, and go to state 36
    T_STRING_LITERAL  shift, and go to state 11

    relational_expression      go to state 88
    additive_expression        go to state 29
    multiplicative_expression  go to state 30
    primary_expression         go to state 31


State 58

   43 relational_expression: relational_expression T_GT . additive_expression

    T_INT_LITERAL     shift, and go to state 1
    T_DOUBLE_LITERAL  shift, and go to state 2
    T_SUB             shift, and go to state 7
    T_LP              shift, and go to state 8
    T_IDENTIFIER      shift, and go to state 36
    T_STRING_LITERAL  shift, and go to state 11

    additive_expression        go to state 89
    multiplicative_expression  go to state 30
    primary_expression         go to state 31


State 59

   45 relational_expression: relational_expression T_GE . additive_expression

    T_INT_LITERAL     shift, and go to state 1
    T_DOUBLE_LITERAL  shift, and go to state 2
    T_SUB             shift, and go to state 7
    T_LP              shift, and go to state 8
    T_IDENTIFIER      shift, and go to state 36
    T_STRING_LITERAL  shift, and go to state 11

    additive_expression        go to state 90
    multiplicative_expression  go to state 30
    primary_expression         go to state 31


State 60

   42 relational_expression: relational_expression T_LT . additive_expression

    T_INT_LITERAL     shift, and go to state 1
    T_DOUBLE_LITERAL  shift, and go to state 2
    T_SUB             shift, and go to state 7
    T_LP              shift, and go to state 8
    T_IDENTIFIER      shift, and go to state 36
    T_STRING_LITERAL  shift, and go to state 11

    additive_expression        go to state 91
    multiplicative_expression  go to state 30
    primary_expression         go to state 31


State 61

   44 relational_expression: relational_expression T_LE . additive_expression

    T_INT_LITERAL     shift, and go to state 1
    T_DOUBLE_LITERAL  shift, and go to state 2
    T_SUB             shift, and go to state 7
    T_LP              shift, and go to state 8
    T_IDENTIFIER      shift, and go to state 36
    T_STRING_LITERAL  shift, and go to state 11

    additive_expression        go to state 92
    multiplicative_expression  go to state 30
    primary_expression         go to state 31


State 62

   47 additive_expression: additive_expression T_ADD . multiplicative_expression

    T_INT_LITERAL     shift, and go to state 1
    T_DOUBLE_LITERAL  shift, and go to state 2
    T_SUB             shift, and go to state 7
    T_LP              shift, and go to state 8
    T_IDENTIFIER      shift, and go to state 36
    T_STRING_LITERAL  shift, and go to state 11

    multiplicative_expression  go to state 93
    primary_expression         go to state 31


State 63

   48 additive_expression: additive_expression T_SUB . multiplicative_expression

    T_INT_LITERAL     shift, and go to state 1
    T_DOUBLE_LITERAL  shift, and go to state 2
    T_SUB             shift, and go to state 7
    T_LP              shift, and go to state 8
    T_IDENTIFIER      shift, and go to state 36
    T_STRING_LITERAL  shift, and go to state 11

    multiplicative_expression  go to state 94
    primary_expression         go to state 31


State 64

   51 multiplicative_expression: multiplicative_expression T_MUL . primary_expression

    T_INT_LITERAL     shift, and go to state 1
    T_DOUBLE_LITERAL  shift, and go to state 2
    T_SUB             shift, and go to state 7
    T_LP              shift, and go to state 8
    T_IDENTIFIER      shift, and go to state 36
    T_STRING_LITERAL  shift, and go to state 11

    primary_expression  go to state 95


State 65

   50 multiplicative_expression: multiplicative_expression T_DIV . primary_expression

    T_INT_LITERAL     shift, and go to state 1
    T_DOUBLE_LITERAL  shift, and go to state 2
    T_SUB             shift, and go to state 7
    T_LP              shift, and go to state 8
    T_IDENTIFIER      shift, and go to state 36
    T_STRING_LITERAL  shift, and go to state 11

    primary_expression  go to state 96


State 66

    6 function_definition: T_FUNCTION T_IDENTIFIER T_LP . param_list T_RP statement_block
    7                    | T_FUNCTION T_IDENTIFIER T_LP . T_RP statement_block

    T_RP          shift, and go to state 97
    T_IDENTIFIER  shift, and go to state 98

    param_list  go to state 99


State 67

   30 global_variable_declaration_statement: T_GLOBAL T_IDENTIFIER T_ASSIGN . expression T_SEMICOLON

    T_INT_LITERAL     shift, and go to state 1
    T_DOUBLE_LITERAL  shift, and go to state 2
    T_SUB             shift, and go to state 7
    T_LP              shift, and go to state 8
    T_IDENTIFIER      shift, and go to state 9
    T_STRING_LITERAL  shift, and go to state 11

    expression                 go to state 100
    equality_expression        go to state 27
    relational_expression      go to state 28
    additive_expression        go to state 29
    multiplicative_expression  go to state 30
    primary_expression         go to state 31


State 68

   29 global_variable_declaration_statement: T_GLOBAL T_IDENTIFIER T_SEMICOLON .

    $default  reduce using rule 29 (global_variable_declaration_statement)


State 69

   22 for_statement: T_FOR T_LP option_expression . T_SEMICOLON option_expression T_SEMICOLON option_expression T_RP statement_block

    T_SEMICOLON  shift, and go to state 101


State 70

   26 if_statement: T_IF T_LP expression . T_RP statement_block
   27             | T_IF T_LP expression . T_RP statement_block T_ELSE statement_block

    T_RP  shift, and go to state 102


State 71

   53 primary_expression: T_LP expression T_RP .

    $default  reduce using rule 53 (primary_expression)


State 72

   37 expression: T_IDENTIFIER T_ASSIGN expression .

    $default  reduce using rule 37 (expression)


State 73

   58 primary_expression: T_IDENTIFIER T_LP T_RP .

    $default  reduce using rule 58 (primary_expression)


State 74

   64 call_param_list: expression .

    $default  reduce using rule 64 (call_param_list)


State 75

   59 primary_expression: T_IDENTIFIER T_LP call_param_list . T_RP
   65 call_param_list: call_param_list . T_COMMA expression

    T_RP     shift, and go to state 103
    T_COMMA  shift, and go to state 104


State 76

   28 return_statement: T_RETURN option_expression T_SEMICOLON .

    $default  reduce using rule 28 (return_statement)


State 77

   20 include_statement: T_INCLUDE T_STRING_LITERAL T_SEMICOLON .

    $default  reduce using rule 20 (include_statement)


State 78

   33 statement_block: T_LC T_RC .

    $default  reduce using rule 33 (statement_block)


State 79

   18 all_statement: can_top_statement .

    $default  reduce using rule 18 (all_statement)


State 80

   19 all_statement: cannot_top_statement .

    $default  reduce using rule 19 (all_statement)


State 81

   31 statement_list: all_statement .

    $default  reduce using rule 31 (statement_list)


State 82

   32 statement_list: statement_list . all_statement
   34 statement_block: T_LC statement_list . T_RC

    T_INT_LITERAL     shift, and go to state 1
    T_DOUBLE_LITERAL  shift, and go to state 2
    T_GLOBAL          shift, and go to state 4
    T_FOR             shift, and go to state 5
    T_IF              shift, and go to state 6
    T_SUB             shift, and go to state 7
    T_LP              shift, and go to state 8
    T_RC              shift, and go to state 105
    T_IDENTIFIER      shift, and go to state 9
    T_BREAK           shift, and go to state 48
    T_CONTINUE        shift, and go to state 49
    T_RETURN          shift, and go to state 10
    T_STRING_LITERAL  shift, and go to state 11
    T_INCLUDE         shift, and go to state 12
    T_DO              shift, and go to state 13
    T_WHILE           shift, and go to state 14

    can_top_statement                      go to state 79
    cannot_top_statement                   go to state 80
    all_statement                          go to state 106
    include_statement                      go to state 18
    expression_statement                   go to state 19
    for_statement                          go to state 20
    do_while_statement                     go to state 21
    while_statement                        go to state 22
    break_statement                        go to state 53
    if_statement                           go to state 23
    return_statement                       go to state 24
    global_variable_declaration_statement  go to state 25
    continue_statement                     go to state 54
    expression                             go to state 26
    equality_expression                    go to state 27
    relational_expression                  go to state 28
    additive_expression                    go to state 29
    multiplicative_expression              go to state 30
    primary_expression                     go to state 31


State 83

   23 do_while_statement: T_DO statement_block T_WHILE . T_LP expression T_RP T_SEMICOLON

    T_LP  shift, and go to state 107


State 84

   24 while_statement: T_WHILE T_LP expression . T_RP statement_block

    T_RP  shift, and go to state 108


State 85

   25 break_statement: T_BREAK T_SEMICOLON .

    $default  reduce using rule 25 (break_statement)


State 86

   35 continue_statement: T_CONTINUE T_SEMICOLON .

    $default  reduce using rule 35 (continue_statement)


State 87

   39 equality_expression: equality_expression T_EQ relational_expression .
   42 relational_expression: relational_expression . T_LT additive_expression
   43                      | relational_expression . T_GT additive_expression
   44                      | relational_expression . T_LE additive_expression
   45                      | relational_expression . T_GE additive_expression

    T_GT  shift, and go to state 58
    T_GE  shift, and go to state 59
    T_LT  shift, and go to state 60
    T_LE  shift, and go to state 61

    $default  reduce using rule 39 (equality_expression)


State 88

   40 equality_expression: equality_expression T_NE relational_expression .
   42 relational_expression: relational_expression . T_LT additive_expression
   43                      | relational_expression . T_GT additive_expression
   44                      | relational_expression . T_LE additive_expression
   45                      | relational_expression . T_GE additive_expression

    T_GT  shift, and go to state 58
    T_GE  shift, and go to state 59
    T_LT  shift, and go to state 60
    T_LE  shift, and go to state 61

    $default  reduce using rule 40 (equality_expression)


State 89

   43 relational_expression: relational_expression T_GT additive_expression .
   47 additive_expression: additive_expression . T_ADD multiplicative_expression
   48                    | additive_expression . T_SUB multiplicative_expression

    T_ADD  shift, and go to state 62
    T_SUB  shift, and go to state 63

    $default  reduce using rule 43 (relational_expression)


State 90

   45 relational_expression: relational_expression T_GE additive_expression .
   47 additive_expression: additive_expression . T_ADD multiplicative_expression
   48                    | additive_expression . T_SUB multiplicative_expression

    T_ADD  shift, and go to state 62
    T_SUB  shift, and go to state 63

    $default  reduce using rule 45 (relational_expression)


State 91

   42 relational_expression: relational_expression T_LT additive_expression .
   47 additive_expression: additive_expression . T_ADD multiplicative_expression
   48                    | additive_expression . T_SUB multiplicative_expression

    T_ADD  shift, and go to state 62
    T_SUB  shift, and go to state 63

    $default  reduce using rule 42 (relational_expression)


State 92

   44 relational_expression: relational_expression T_LE additive_expression .
   47 additive_expression: additive_expression . T_ADD multiplicative_expression
   48                    | additive_expression . T_SUB multiplicative_expression

    T_ADD  shift, and go to state 62
    T_SUB  shift, and go to state 63

    $default  reduce using rule 44 (relational_expression)


State 93

   47 additive_expression: additive_expression T_ADD multiplicative_expression .
   50 multiplicative_expression: multiplicative_expression . T_DIV primary_expression
   51                          | multiplicative_expression . T_MUL primary_expression

    T_MUL  shift, and go to state 64
    T_DIV  shift, and go to state 65

    $default  reduce using rule 47 (additive_expression)


State 94

   48 additive_expression: additive_expression T_SUB multiplicative_expression .
   50 multiplicative_expression: multiplicative_expression . T_DIV primary_expression
   51                          | multiplicative_expression . T_MUL primary_expression

    T_MUL  shift, and go to state 64
    T_DIV  shift, and go to state 65

    $default  reduce using rule 48 (additive_expression)


State 95

   51 multiplicative_expression: multiplicative_expression T_MUL primary_expression .

    $default  reduce using rule 51 (multiplicative_expression)


State 96

   50 multiplicative_expression: multiplicative_expression T_DIV primary_expression .

    $default  reduce using rule 50 (multiplicative_expression)


State 97

    7 function_definition: T_FUNCTION T_IDENTIFIER T_LP T_RP . statement_block

    T_LC  shift, and go to state 44

    statement_block  go to state 109


State 98

   62 param_list: T_IDENTIFIER .

    $default  reduce using rule 62 (param_list)


State 99

    6 function_definition: T_FUNCTION T_IDENTIFIER T_LP param_list . T_RP statement_block
   63 param_list: param_list . T_COMMA T_IDENTIFIER

    T_RP     shift, and go to state 110
    T_COMMA  shift, and go to state 111


State 100

   30 global_variable_declaration_statement: T_GLOBAL T_IDENTIFIER T_ASSIGN expression . T_SEMICOLON

    T_SEMICOLON  shift, and go to state 112


State 101

   22 for_statement: T_FOR T_LP option_expression T_SEMICOLON . option_expression T_SEMICOLON option_expression T_RP statement_block

    T_INT_LITERAL     shift, and go to state 1
    T_DOUBLE_LITERAL  shift, and go to state 2
    T_SUB             shift, and go to state 7
    T_LP              shift, and go to state 8
    T_IDENTIFIER      shift, and go to state 9
    T_STRING_LITERAL  shift, and go to state 11

    $default  reduce using rule 61 (option_expression)

    expression                 go to state 41
    equality_expression        go to state 27
    relational_expression      go to state 28
    additive_expression        go to state 29
    multiplicative_expression  go to state 30
    primary_expression         go to state 31
    option_expression          go to state 113


State 102

   26 if_statement: T_IF T_LP expression T_RP . statement_block
   27             | T_IF T_LP expression T_RP . statement_block T_ELSE statement_block

    T_LC  shift, and go to state 44

    statement_block  go to state 114


State 103

   59 primary_expression: T_IDENTIFIER T_LP call_param_list T_RP .

    $default  reduce using rule 59 (primary_expression)


State 104

   65 call_param_list: call_param_list T_COMMA . expression

    T_INT_LITERAL     shift, and go to state 1
    T_DOUBLE_LITERAL  shift, and go to state 2
    T_SUB             shift, and go to state 7
    T_LP              shift, and go to state 8
    T_IDENTIFIER      shift, and go to state 9
    T_STRING_LITERAL  shift, and go to state 11

    expression                 go to state 115
    equality_expression        go to state 27
    relational_expression      go to state 28
    additive_expression        go to state 29
    multiplicative_expression  go to state 30
    primary_expression         go to state 31


State 105

   34 statement_block: T_LC statement_list T_RC .

    $default  reduce using rule 34 (statement_block)


State 106

   32 statement_list: statement_list all_statement .

    $default  reduce using rule 32 (statement_list)


State 107

   23 do_while_statement: T_DO statement_block T_WHILE T_LP . expression T_RP T_SEMICOLON

    T_INT_LITERAL     shift, and go to state 1
    T_DOUBLE_LITERAL  shift, and go to state 2
    T_SUB             shift, and go to state 7
    T_LP              shift, and go to state 8
    T_IDENTIFIER      shift, and go to state 9
    T_STRING_LITERAL  shift, and go to state 11

    expression                 go to state 116
    equality_expression        go to state 27
    relational_expression      go to state 28
    additive_expression        go to state 29
    multiplicative_expression  go to state 30
    primary_expression         go to state 31


State 108

   24 while_statement: T_WHILE T_LP expression T_RP . statement_block

    T_LC  shift, and go to state 44

    statement_block  go to state 117


State 109

    7 function_definition: T_FUNCTION T_IDENTIFIER T_LP T_RP statement_block .

    $default  reduce using rule 7 (function_definition)


State 110

    6 function_definition: T_FUNCTION T_IDENTIFIER T_LP param_list T_RP . statement_block

    T_LC  shift, and go to state 44

    statement_block  go to state 118


State 111

   63 param_list: param_list T_COMMA . T_IDENTIFIER

    T_IDENTIFIER  shift, and go to state 119


State 112

   30 global_variable_declaration_statement: T_GLOBAL T_IDENTIFIER T_ASSIGN expression T_SEMICOLON .

    $default  reduce using rule 30 (global_variable_declaration_statement)


State 113

   22 for_statement: T_FOR T_LP option_expression T_SEMICOLON option_expression . T_SEMICOLON option_expression T_RP statement_block

    T_SEMICOLON  shift, and go to state 120


State 114

   26 if_statement: T_IF T_LP expression T_RP statement_block .
   27             | T_IF T_LP expression T_RP statement_block . T_ELSE statement_block

    T_ELSE  shift, and go to state 121

    $default  reduce using rule 26 (if_statement)


State 115

   65 call_param_list: call_param_list T_COMMA expression .

    $default  reduce using rule 65 (call_param_list)


State 116

   23 do_while_statement: T_DO statement_block T_WHILE T_LP expression . T_RP T_SEMICOLON

    T_RP  shift, and go to state 122


State 117

   24 while_statement: T_WHILE T_LP expression T_RP statement_block .

    $default  reduce using rule 24 (while_statement)


State 118

    6 function_definition: T_FUNCTION T_IDENTIFIER T_LP param_list T_RP statement_block .

    $default  reduce using rule 6 (function_definition)


State 119

   63 param_list: param_list T_COMMA T_IDENTIFIER .

    $default  reduce using rule 63 (param_list)


State 120

   22 for_statement: T_FOR T_LP option_expression T_SEMICOLON option_expression T_SEMICOLON . option_expression T_RP statement_block

    T_INT_LITERAL     shift, and go to state 1
    T_DOUBLE_LITERAL  shift, and go to state 2
    T_SUB             shift, and go to state 7
    T_LP              shift, and go to state 8
    T_IDENTIFIER      shift, and go to state 9
    T_STRING_LITERAL  shift, and go to state 11

    $default  reduce using rule 61 (option_expression)

    expression                 go to state 41
    equality_expression        go to state 27
    relational_expression      go to state 28
    additive_expression        go to state 29
    multiplicative_expression  go to state 30
    primary_expression         go to state 31
    option_expression          go to state 123


State 121

   27 if_statement: T_IF T_LP expression T_RP statement_block T_ELSE . statement_block

    T_LC  shift, and go to state 44

    statement_block  go to state 124


State 122

   23 do_while_statement: T_DO statement_block T_WHILE T_LP expression T_RP . T_SEMICOLON

    T_SEMICOLON  shift, and go to state 125


State 123

   22 for_statement: T_FOR T_LP option_expression T_SEMICOLON option_expression T_SEMICOLON option_expression . T_RP statement_block

    T_RP  shift, and go to state 126


State 124

   27 if_statement: T_IF T_LP expression T_RP statement_block T_ELSE statement_block .

    $default  reduce using rule 27 (if_statement)


State 125

   23 do_while_statement: T_DO statement_block T_WHILE T_LP expression T_RP T_SEMICOLON .

    $default  reduce using rule 23 (do_while_statement)


State 126

   22 for_statement: T_FOR T_LP option_expression T_SEMICOLON option_expression T_SEMICOLON option_expression T_RP . statement_block

    T_LC  shift, and go to state 44

    statement_block  go to state 127


State 127

   22 for_statement: T_FOR T_LP option_expression T_SEMICOLON option_expression T_SEMICOLON option_expression T_RP statement_block .

    $default  reduce using rule 22 (for_statement)
